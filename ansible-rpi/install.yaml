---    
- hosts: raspberry-gg-cores
  vars:
    gg_core_version: 1.9.2
    gg_core_architecture: linux-armv7l
    gg_core_package_filename: greengrass-{{gg_core_architecture}}-{{gg_core_version}}.tar.gz
  tasks:
  # https://docs.aws.amazon.com/greengrass/latest/developerguide/setup-filter.rpi.html , section 9
  - name: Create GG user group
    group:
      name: ggc_group
      state: present
      system: yes

  - name: Create GG user
    group:
      name: ggc_user
      state: present
      system: yes

  # https://docs.aws.amazon.com/greengrass/latest/developerguide/setup-filter.rpi.html , section 10
  - name: Turn on fs.protected_hardlinks
    lineinfile:
      regexp: '^\s*fs\.protected_hardlinks\s*='
      line: 'fs.protected_hardlinks = 1'
      path: /etc/sysctl.d/98-rpi.conf
      create: yes
      backup: yes

  - name: Turn on fs.protected_symlinks
    lineinfile:
      regexp: '^\s*fs\.protected_symlinks\s*='
      line: 'fs.protected_symlinks = 1'
      path: /etc/sysctl.d/98-rpi.conf
      create: yes    
      backup: yes
  - name: Reboot
    reboot:
      reboot_timeout: 3000

  # TODO: check the proper lines exits in the output of 'sudo sysctl -a 2> /dev/null | grep fs.protected'

  # Install Python dependencies
  - name: Install Python dependencies
    pip:
      name: ['greengrasssdk', 'RPi.GPIO', 'psutil']


  - name: Create `install-gg` dir
    file:
      path: /home/pi/install-gg
      state: directory
  - name: Download AWS IoT Greengrass Core Software distribution v.{{gg_core_version}}
    get_url:
      url: https://d1onfpft10uf5o.cloudfront.net/greengrass-core/downloads/{{gg_core_version}}/{{gg_core_package_filename}}
      dest: /home/pi/install-gg/{{gg_core_package_filename}}
  - name: Extract AWS IoT Greengrass Core Software into /
    unarchive:
      src: /home/pi/install-gg/{{gg_core_package_filename}}
      dest: /
      remote_src: yes

  # Copy keys from the `keys` directory
  - name: Copy key files
    copy:
      src: keys/{{item}}
      dest: /greengrass/certs/
      mode: '0400'
    with_items:
      - '{{cert}}'
      - '{{private_key}}'
      - '{{public_key}}'
  - name:
    get_url:
      url: https://www.amazontrust.com/repository/AmazonRootCA1.pem
      dest: /greengrass/certs/root.ca.pem

  # Generate configuration file
  - name:
    template:
      src: templates/config.json.j2
      dest: /greengrass/config/config.json
      mode: '0600'
      backup: yes

...

